package corbos.orderapi.data;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import org.springframework.stereotype.Repository;

import corbos.orderapi.models.Order;

@Repository
public class OrderInMemoryDao implements OrderDao {

    private static final List<Order> orders = new ArrayList<>();
    enum Side { Buy, Sell; }
    enum OrderStatus {BEGIN,NEW,PARTIAL,COMPLETED,CANCELED;}

    @Override
    public Order add(Order order) {
        int nextId = orders.stream()
                .mapToInt(i -> i.getClientID())
                .max()
                .orElse(0) + 1;

        order.setOrderID(nextId);
        order.setClientID(nextId);
        order.setOrderStatus(OrderStatus.BEGIN.name());
        orders.add(order);
        return order;
    }

    @Override
    public List<Order> getAll() {
        return new ArrayList<>(orders);
    }

	@Override
	public Order findById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean update(Order todo) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteById(int id) {
		// TODO Auto-generated method stub
		return false;
	}

	/*
	 * @Override public Order findById(int id) { return orders.stream() .filter(i ->
	 * i.getId() == id) .findFirst() .orElse(null); }
	 * 
	 * @Override public boolean update(Order order) {
	 * 
	 * int index = 0; while (index < orders.size() && orders.get(index).getId() !=
	 * order.getId()) { index++; }
	 * 
	 * if (index < orders.size()) { orders.set(index, order); } return index <
	 * orders.size(); }
	 * 
	 * @Override public boolean deleteById(int id) { return orders.removeIf(i ->
	 * i.getId() == id); }
	 */

}